resources:
  App\Customer\Domain\Entity\CustomerStatus:
    denormalizationContext:
      groups: [ 'write:customerStatus' ]
    operations:
      ApiPlatform\Metadata\GetCollection:
        filters: ['customer_value.mongodb.value_filter']
      ApiPlatform\Metadata\Get:
      ApiPlatform\Metadata\Put:
      ApiPlatform\Metadata\Patch:
      ApiPlatform\Metadata\Delete:
      ApiPlatform\Metadata\Post:

  App\Customer\Domain\Entity\CustomerType:
    denormalizationContext:
      groups: [ 'write:customerType' ]
    operations:
      ApiPlatform\Metadata\GetCollection:
        filters: ['customer_value.mongodb.value_filter']
      ApiPlatform\Metadata\Get:
      ApiPlatform\Metadata\Put:
      ApiPlatform\Metadata\Patch:
      ApiPlatform\Metadata\Delete:
      ApiPlatform\Metadata\Post:

  App\Customer\Domain\Entity\Customer:
    paginationPartial: true,
    paginationViaCursor:
      - { field: 'ulid', direction: 'DESC' }
    denormalizationContext:
      groups: [ 'write:customer' ]
    operations:
      ApiPlatform\Metadata\GetCollection:
        filters: [ 'app.customer.mongodb.range_filter', 'customer.mongodb.order', 'customer.mongodb.customer_filter']
      ApiPlatform\Metadata\Get:
      ApiPlatform\Metadata\Put:
      ApiPlatform\Metadata\Patch:
      ApiPlatform\Metadata\Delete:
      ApiPlatform\Metadata\Post:

  App\Internal\HealthCheck\Domain\ValueObject\HealthCheck:
    operations:
      ApiPlatform\Metadata\Get:
        uriTemplate: '/health'
        controller: 'App\Internal\HealthCheck\Application\Controller\HealthCheckController'
        openapi:
          responses:
            '204':
              description: 'Health check passed with no content to return.'
            '500':
              description: 'Health check failed.'
