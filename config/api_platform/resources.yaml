resources:
  App\Customer\Domain\Entity\CustomerStatus:
    paginationPartial: true,
    paginationClientItemsPerPage: true
    paginationViaCursor:
      - { field: 'ulid', direction: 'DESC' }
    operations:
      ApiPlatform\Metadata\GetCollection:
        filters:
          [
            'customer.mongodb.status.order',
            'customer.mongodb.status.partial_search',
            'mongodb.range',
          ]
      ApiPlatform\Metadata\Get:
      ApiPlatform\Metadata\Put:
      ApiPlatform\Metadata\Patch:
      ApiPlatform\Metadata\Delete:
      ApiPlatform\Metadata\Post:
        input: 'App\Customer\Application\DTO\StatusCreateDto'
        processor: 'App\Customer\Application\Processor\CreateStatusProcessor'

  App\Customer\Domain\Entity\CustomerType:
    normalizationContext:
      groups: ['output']
    paginationPartial: true
    paginationClientItemsPerPage: true
    paginationViaCursor:
      - { field: 'ulid', direction: 'DESC' }
    operations:
      ApiPlatform\Metadata\GetCollection:
        filters:
          ['customer.mongodb.type.order', 'customer.mongodb.type.partial_search', 'mongodb.range']
      ApiPlatform\Metadata\Get:
      ApiPlatform\Metadata\Put:
      ApiPlatform\Metadata\Patch:
      ApiPlatform\Metadata\Delete:
      ApiPlatform\Metadata\Post:
        input: 'App\Customer\Application\DTO\TypeCreateDto'
        processor: 'App\Customer\Application\Processor\CreateTypeProcessor'

  App\Customer\Domain\Entity\Customer:
    paginationPartial: true,
    paginationClientItemsPerPage: true
    paginationViaCursor:
      - { field: 'ulid', direction: 'DESC' }
    operations:
      ApiPlatform\Metadata\GetCollection:
        filters:
          [
            'customer.mongodb.search',
            'customer.mongodb.order',
            'customer.mongodb.date',
            'mongodb.range',
          ]
      ApiPlatform\Metadata\Get:
      ApiPlatform\Metadata\Put:
      ApiPlatform\Metadata\Patch:
      ApiPlatform\Metadata\Delete:
      ApiPlatform\Metadata\Post:
        input: 'App\Customer\Application\DTO\CustomerCreateDto'
        processor: 'App\Customer\Application\Processor\CreateCustomerProcessor'

  App\Internal\HealthCheck\Domain\ValueObject\HealthCheck:
    operations:
      ApiPlatform\Metadata\Get:
        uriTemplate: '/health'
        controller: 'App\Internal\HealthCheck\Application\Controller\HealthCheckController'
        openapi:
          responses:
            '204':
              description: 'Health check passed with no content to return.'
            '500':
              description: 'Health check failed.'
